name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # 检出代码

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # 设置Docker Buildx，用于多架构构建

      - name: Build and Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker buildx create --use
          docker buildx inspect default --bootstrap
          docker buildx build --push --platform linux/amd64,linux/arm64 -t kromiose/ng-presethub-bed:latest .

  # Enabling this job will deploy the image to your server
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Connect Check
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: ssh -o StrictHostKeyChecking=no ${{ secrets.YOUR_SERVER_HOST }} "echo'success'"

      - name: Configure SSH Key
        env:
          YOUR_SERVER_HOST: ${{ secrets.YOUR_SERVER_HOST }}
          YOUR_SSH_KEY: ${{ secrets.YOUR_SSH_KEY }}

        run: |
          mkdir -p ~/.ssh
          echo "$YOUR_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.YOUR_SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        uses: garygrossgarten/github-action-ssh@release
        env:
          YOUR_SERVER_HOST: ${{ secrets.YOUR_SERVER_HOST }}
          YOUR_SSH_KEY: ${{ secrets.YOUR_SSH_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_COMPOSE_FILE: ${{ secrets.DOCKER_COMPOSE_FILE }}
        with:
          host: ${{ secrets.YOUR_SERVER_HOST }}
          username: ubuntu
          port: 22
          privateKey: ${{ secrets.YOUR_SSH_KEY}}
          command: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/ng-presethub-bed -f
            mkdir -p ~/docker-compose-presethub-bed
            cd ~/docker-compose-presethub-bed
            sudo rm -rf docker-compose.yml
            echo "${{ secrets.DOCKER_COMPOSE_FILE }}" > docker-compose.yml
            sudo docker-compose up -d
            rm -rf ~/.ssh/id_rsa